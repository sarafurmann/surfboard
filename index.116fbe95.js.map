{"mappings":"AAAA,MAAMA,SAAWC,EAAE,WACbC,QAAUD,EAAE,gBAEZE,aAAe,IAAIC,aAAaC,OAAOC,UAAUC,WACjDC,SAAWL,aAAaM,SAG9B,IAAIC,UAAW,EAEfV,SAASW,QAAQC,SAAS,UAE1B,MAAMC,kBAAoBC,IAEtB,IAAiB,IAAbJ,SAAoB,CACpBA,UAAW,EACX,MAAMK,GAAuB,IAAZD,EAGPE,EADiBhB,SAASiB,GAAGH,GACFI,KAAK,uBAChCC,EAAWlB,EAAE,eAED,SAAde,EACAG,EAASP,SAAS,wBAElBO,EAASC,YAAY,wBAG7BlB,QAAQmB,IAAI,CACRC,UAAS,cAAgBP,QAG7Bf,SAASiB,GAAGH,GAAWF,SAAS,UAAUW,WAAWH,YAAY,UAEjED,EAASK,KAAK,qBAAqBP,GAAGH,GAAWF,SAAS,UAAUW,WAAWH,YAAY,UAE3FK,YAAU,KACNf,UAAW,EAEXS,EACCK,KAAK,qBACLP,GAAGH,GACHF,SAAS,4BACTW,WACAH,YAAY,8BAEd,QAILM,eAAiBC,IACnB,MAAMC,EAAgB5B,SAAS6B,OAAO,WAChCC,EAAcF,EAAcG,OAC5BC,EAAcJ,EAAcK,OAEhB,SAAdN,GAAwBG,EAAYI,QACpCrB,kBAAkBiB,EAAYK,SAGhB,SAAdR,GAAwBK,EAAYE,QACpCrB,kBAAkBmB,EAAYG,UAItClC,EAAEI,QAAQ+B,GAAG,SAASC,IAClB,MAAMC,EAASD,EAAEE,cAAcD,OAI3BA,EAAS,GACTZ,eAAe,QAGfY,EAAS,GACTZ,eAAe,QAEnBc,QAAQC,IAAIH,MAGhBrC,EAAEI,QAAQ+B,GAAG,WAAYC,IAGrB,MAAMK,EAAUL,EAAEM,OAAOD,QAAQE,cAEjC,GAAgB,UAAZF,GAAmC,aAAZA,EACvB,OAAQL,EAAEQ,SACN,KAAK,GACDnB,eAAe,QACf,MACJ,KAAK,GACDA,eAAe,YAM/BzB,EAAE,YAAYmC,GAAG,cAAcU,GAAWT,EAAEU,mBAE5C9C,EAAE,oBAAoB+C,OAAMX,IACxBA,EAAEU,iBAEF,MACMJ,EADQ1C,EAAEoC,EAAEY,eACG/B,KAAK,kBACpBgC,EAAajD,EAAC,oBAAqB0C,MAEzC9B,kBAAkBqC,EAAWf,YAG7B3B,UACAP,EAAE,QAAQkD,MAAO,CACbA,MAAO,SAAUC,EAAOzB,GACF,OAAdA,EACAD,eAAe,QACM,SAAdC,GACPD,eAAe","sources":["src/js/menuline.js"],"sourcesContent":["const sections = $(\"section\");\nconst display = $(\".maincontent\");\n\nconst mobileDetect = new MobileDetect(window.navigator.userAgent);\nconst isMobile = mobileDetect.mobile();\n\n\nlet inScroll = false;\n\nsections.first().addClass(\"active\");\n\nconst performTransition = sectionEq => {\n\n    if (inScroll === false) {\n        inScroll = true;\n        const position = sectionEq * -100;\n\n            const currentSection = sections.eq(sectionEq);\n            const menuTheme = currentSection.attr(\"data-sidemenu-theme\");\n            const sideMenu = $(\".fixed-menu\");\n\n            if (menuTheme === \"dark\") {\n                sideMenu.addClass(\"fixed-menu--shadowed\");\n            } else {\n                sideMenu.removeClass(\"fixed-menu--shadowed\");\n            }\n\n        display.css({\n            transform: `translateY(${position}%)`\n        });\n\n        sections.eq(sectionEq).addClass(\"active\").siblings().removeClass(\"active\");\n\n        sideMenu.find(\".fixed-menu__item\").eq(sectionEq).addClass(\"active\").siblings().removeClass(\"active\");\n        \n        setTimeout (() => {\n            inScroll = false;\n\n            sideMenu\n            .find(\".fixed-menu__item\")\n            .eq(sectionEq)\n            .addClass(\"fixed-menu__item--active\")\n            .siblings()\n            .removeClass(\"fixed-menu__item--active\");\n\n        }, 1300);\n    }\n};\n\nconst scrollViewport = direction => {\n    const activeSection = sections.filter(\".active\");\n    const nextSection = activeSection.next();\n    const prevSection = activeSection.prev();\n\n    if (direction === \"next\" && nextSection.length) {\n        performTransition(nextSection.index())\n    }\n\n    if (direction === \"prev\" && prevSection.length) {\n        performTransition(prevSection.index())\n    }\n}\n\n$(window).on(\"wheel\", e => {\n    const deltaY = e.originalEvent.deltaY;\n\n    // console.log(\"wheeel\");\n\n    if (deltaY > 0) {\n        scrollViewport(\"next\");\n    }\n\n    if (deltaY < 0) {\n        scrollViewport(\"prev\");\n    }\n    console.log(deltaY);\n});\n\n$(window).on(\"keydown\", (e) => {\n    // console.log(e.keyCode);\n\n    const tagName = e.target.tagName.toLowerCase();\n\n    if (tagName !== \"input\" && tagName !== \"textarea\") {\n        switch (e.keyCode) {\n            case 38: \n                scrollViewport(\"prev\");\n                break;\n            case 40:\n                scrollViewport(\"next\");\n                break;\n        }\n    }\n})\n\n$(\".wrapper\").on(\".touchmove\", exports => e.preventDefault());\n\n$(\"[data-scroll-to]\").click(e => {\n    e.preventDefault();\n\n    const $this = $(e.currentTarget);\n    const target = $this.attr(\"data-scroll-to\");\n    const reqSection = $(`[data-section-id=${target}]`);\n\n    performTransition(reqSection.index());\n})\n\nif (isMobile) {\n    $(\"body\").swipe( {\n        swipe: function (event, direction) {\n            if (direction === \"up\") {\n                scrollViewport(\"next\")\n            } else if (direction === \"down\") {\n                scrollViewport(\"prev\")\n            }\n        }\n      });\n}\n"],"names":["sections","$","display","mobileDetect","MobileDetect","window","navigator","userAgent","isMobile","mobile","inScroll","first","addClass","performTransition","sectionEq","position","menuTheme","eq","attr","sideMenu","removeClass","css","transform","siblings","find","setTimeout","scrollViewport","direction","activeSection","filter","nextSection","next","prevSection","prev","length","index","on","e","deltaY","originalEvent","console","log","tagName","target","toLowerCase","keyCode","exports","preventDefault","click","currentTarget","reqSection","swipe","event"],"version":3,"file":"index.116fbe95.js.map"}